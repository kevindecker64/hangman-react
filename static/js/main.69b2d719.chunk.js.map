{"version":3,"sources":["components/Header.jsx","components/Figure.jsx","components/WrongLetters.jsx","components/Word.jsx","helpers/helpers.js","components/Popup.jsx","components/Notification.jsx","App.jsx","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","id","split","includes","showNotification","setter","setTimeout","checkWin","status","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","Notification","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","console","log","match","toLocaleLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69b2d719.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n  return (\n    <>\n      <h1>Hangman</h1>\n      <p>Find the hidden word - Enter a letter</p>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Figure({ wrongLetters }) {\n  const errors = wrongLetters.length;\n\n  return (\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\n      {/* <!-- Gallows --> */}\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n      {/* <!-- Head --> */}\n      {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\n      {/* <!-- Body --> */}\n      {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\n      {/* <!-- Arms --> */}\n      {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\n      {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\n      {/* <!-- Legs --> */}\n      {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\n      {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\n    </svg>\n  );\n}\n","import React from \"react\";\n\nexport default function WrongLetters({ wrongLetters }) {\n  return (\n    <div className=\"wrong-letters-container\">\n      <div>\n        {wrongLetters.length > 0 && <p>Wrong</p>}\n        {wrongLetters\n          .map((letter, i) => <span key={i}> {letter}</span>)\n          .reduce(\n            (prev, curr) => (prev === null ? [curr] : [prev, \", \", curr]),\n            null\n          )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Word({ selectedWord, correctLetters }) {\n  return (\n    <div className=\"word\" id=\"word\">\n      {selectedWord.split(\"\").map((letter, i) => {\n        return (\n          <span className=\"letter\" key={i}>\n            {correctLetters.includes(letter) ? letter : \"\"}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","export function showNotification(setter) {\n  setter(true);\n  setTimeout(() => {\n    setter(false);\n  }, 2000);\n}\n\nexport function checkWin(selectedWord, correctLetters, wrongLetters) {\n  let status = \"win\";\n\n  for (let letter of selectedWord.split(\"\")) {\n    if (!correctLetters.includes(letter)) {\n      status = \"\";\n    }\n  }\n\n  if (wrongLetters.length === 6) status = \"lose\";\n\n  return status;\n}\n","import React, {useEffect} from \"react\";\nimport { checkWin } from \"../helpers/helpers\";\n\nexport default function Popup({\n  selectedWord,\n  correctLetters,\n  wrongLetters,\n  setPlayable,\n  playAgain,\n}) {\n  let finalMessage = \"\";\n  let finalMessageRevealWord = \"\";\n  let playable = true;\n\n  if (checkWin(selectedWord, correctLetters, wrongLetters) === \"win\") {\n    finalMessage = \"Congrats! You Win!\";\n    playable = false;\n  } else if (checkWin(selectedWord, correctLetters, wrongLetters) === \"lose\") {\n    finalMessage = \"You lost...\";\n    finalMessageRevealWord = `The word was: ${selectedWord}`;\n    playable = \"false\";\n  }\n\n  useEffect(() => setPlayable(playable))\n\n  return (\n    <div className=\"popup-container\" style={finalMessage !== \"\" ? {display:\"flex\"} : {}}>\n      <div className=\"popup\">\n        <h2>{finalMessage}</h2>\n        <h3>{finalMessageRevealWord}</h3>\n        <button onClick={playAgain}>Play Again</button>\n      </div>\n    </div>\n  );\n}\n","export default function Notification({ showNotification }) {\n  return (\n    <div className={`notification-container ${showNotification ? \"show\" : \"\"}`}>\n      <p>You have already guessed this letter</p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Figure from \"./components/Figure\";\nimport WrongLetters from \"./components/WrongLetters\";\nimport Word from \"./components/Word\";\nimport Popup from \"./components/Popup\";\nimport Notification from \"./components/Notification\";\n\nimport { showNotification as show } from \"./helpers/helpers\";\n\nimport \"./App.css\";\n\nconst words = [\n  \"one\",\n  \"two\",\n  \"three\",\n  \"four\",\n  \"five\",\n  \"six\",\n  \"seven\",\n  \"eight\",\n  \"nine\",\n  \"moist\",\n  \"laceration\",\n  \"bass\",\n  \"chastity\",\n  \"lavender\",\n  \"blanket\",\n  \"teeth\",\n  \"magnets\",\n  \"weights\",\n  \"paper\",\n  \"hair\",\n  \"curly\",\n  \"warm\",\n  \"paperclip\",\n  \"briefcase\",\n  \"smells\",\n  \"soft\",\n  \"extroverted\",\n  \"friendly\",\n  \"chill\",\n];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nexport default function App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = (event) => {\n      const key = event.key;\n      console.log(key);\n      if (playable && key.length === 1 && key.match(/[a-z]/i)) {\n        const letter = key.toLocaleLowerCase();\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((currentLetters) => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((wrongLetters) => [...wrongLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeydown);\n    return () => window.removeEventListener(\"keydown\", handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    selectedWord = words[Math.floor(Math.random() * words.length)];\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup\n        selectedWord={selectedWord}\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n      <Notification showNotification={showNotification} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}